classes,inherent_index,name,Description
commodity,c,commodity\_lodf\_tolerance,"The minimum absolute value of the line outage distribution factor (LODF) that is considered meaningful."
commodity,c,commodity\_physics,"Defines if the commodity follows lodf or ptdf physics."
commodity,c,commodity\_ptdf\_threshold,"The minimum absolute value of the power transfer distribution factor (PTDF) that is considered meaningful."
connection,conn,candidate\_connections,"The number of connections that may be invested in"
connection,conn,connection\_availability\_factor,"Availability of the connection, acting as a multiplier on its connection\_capacity. Typically between 0-1."
connection,conn,connection\_contingency,"A boolean flag for defining a contingency connection."
connection,conn,connection\_flow\_cost,"Variable costs of a flow through a connection. E.g. EUR/MWh of energy throughput."
connection,conn,connection\_investment\_cost,"The per unit investment cost for the connection over the connection\_investment\_lifetime"
connection,conn,connection\_investment\_lifetime,"Determines the minimum investment lifetime of a connection. Once invested, it remains in service for this long"
connection,conn,connection\_investment\_variable\_type,"Determines whether the investment variable is integer variable\_type\_integer or continuous variable\_type\_continuous"
connection,conn,connection\_monitored,"A boolean flag for defining a contingency connection."
connection,conn,connection\_reactance,"The per unit reactance of a connection."
connection,conn,connection\_reactance\_base,"If the reactance is given for a p.u.  (e.g. p.u. = 100MW), the connection\_reactance\_base can be set to perform this conversion (e.g. *100)."
connection,conn,connection\_resistance,"The per unit resistance of a connection."
connection,conn,connection\_type,"A selector between a normal and a lossless bidirectional connection."
connection,conn,fix\_connections\_invested,"Setting a value fixes the connections\_invested variable accordingly"
connection,conn,fix\_connections\_invested\_available,"Setting a value fixes the connections\_invested\_available variable accordingly"
connection,conn,has\_binary\_gas\_flow,"This parameter needs to be set to true in order to represent bidirectional pressure drive gas transfer."
model,m,duration\_unit,"Defines the base temporal unit of the model. Currently supported values are either an hour or a minute."
model,m,max\_gap,"Specifies the maximum optimality gap for the model. Currently only used for the master problem within a decomposed structure"
model,m,max\_iterations,"Specifies the maximum number of iterations for the model. Currently only used for the master problem within a decomposed structure"
model,m,model\_end, "Defines the last timestamp to be modelled. Rolling optimisation terminates after passing this point."
model,m,model\_start, "Defines the first timestamp to be modelled. Relative temporal\_blocks refer to this value for their start and end."
model,m,model\_type,"Used to identify model objects as relating to the master problem or operational sub problems (default)"
model,m,roll\_forward,"Defines how much the model moves ahead in time between solves in a rolling optimisation. Without this parameter, everything is solved in as a single optimisation."
model,m,write\_lodf\_file,"A boolean flag for whether the LODF values should be written to a results file."
model,m,write\_mps\_file,"A selector for writing an .mps file of the model."
model,m,write\_ptdf\_file,"A boolean flag for whether the LODF values should be written to a results file."
model,m,big\_m,"Sufficiently large number used for linearization bilinear terms, e.g. to enforce bidirectional flow for gas pipielines"
node,n,balance\_type,"A selector for how the :nodal\_balance constraint should be handled."
node,n,candidate\_storages,"Determines the maximum number of new storages which may be invested in."
node,n,demand,"Demand for the commodity of a node. Energy gains can be represented using negative demand."
node,n,downward\_reserve,"Identifier for nodes providing downward reserves"
node,n,fix\_node\_state,"Fixes the corresponding node\_state variable to the provided value. Can be used for e.g. fixing boundary conditions."
node,n,fix\_storages\_invested,"Used to fix the value of the storages\_invested variable"
node,n,fix\_storages\_invested\_available,"Used to fix the value of the storages\_invested\_available variable"
node,n,fix\_node\_pressure,"Fixes the corresponding node\_pressure variable to the provided value"
node,n,fix\_node\_voltage\_angle,"Fixes the corresponding node\_voltage\_angle variable to the provided value"
node,n,frac\_state\_loss,"Self-discharge coefficient for node\_state variables. Effectively, represents the *loss power per unit of state*."
node,n,fractional\_demand,"The fraction of a node group's demand applied for the node in question."
node,n,has\_state,"A boolean flag for whether a node has a node\_state variable."
node,n,has\_pressure,"A boolean flag for whether a node has a node\_pressure variable."
node,n,has\_voltage\_angle,"A boolean flag for whether a node has a node\_voltage\_angle variable."
node,n,is\_reserve\_node,"A boolean flag for whether a node is acting as a reserve\_node"
node,n,minimum\_reserve\_activation\_time,"Duration a certain reserve product needs to be online/available"
node,n,nodal\_balance\_sense,"A selector for nodal\_balance constraint sense."
node,n,node\_opf\_type,"A selector for the reference node (slack bus) when PTDF-based DC load-flow is enabled."
node,n,node\_slack\_penalty,"A penalty cost for node\_slack\_pos and node\_slack\_neg variables. The slack variables won't be included in the model unless there's a cost defined for them."
node,n,node\_state\_cap,"The maximum permitted value for a node\_state variable."
node,n,node\_state\_min,"The minimum permitted value for a node\_state variable."
node,n,state\_coeff,"Represents the commodity content of a node\_state variable in respect to the unit\_flow and connection\_flow variables. Essentially, acts as a coefficient on the node\_state variable in the :node\_injection constraint."
node,n,storage\_investment\_cost,"Determines the investment cost per unit state\_cap over the investment life of a storage"
node,n,storage\_investment\_lifetime,"Minimum lifetime for storage investment decisions."
node,n,storage\_investment\_variable\_type,"Determines whether the storage investment variable is continuous (usually representing capacity) or integer (representing discrete units invested)"
node,n,tax\_in\_unit\_flow,"Tax costs for incoming unit\_flows on this node. E.g. EUR/MWh."
node,n,tax\_net\_unit\_flow,"Tax costs for net incoming and outgoing unit\_flows on this node. Incoming flows accrue positive net taxes, and outgoing flows accrue negative net taxes."
node,n,tax\_out\_unit\_flow,"Tax costs for outgoing unit\_flows from this node. E.g. EUR/MWh."
node,n,upward\_reserve,"Identifier for nodes providing upward reserves"
node,n,max\_node\_pressure,"Maximum allowed gas pressure at node."
node,n,min\_node\_pressure,"Minimum allowed gas pressure at node."
node,n,max\_voltage\_angle,"Maximum allowed voltage angle at node."
node,n,min\_voltage\_angle,"Minimum allowed voltage angle at node. "
temporal\_block,tb,block\_end,"The end time for the temporal\_block. Can be given either as a DateTime for a static end point, or as a Duration for an end point relative to the start of the current optimisation."
temporal\_block,tb,block\_start,"The start time for the temporal\_block. Can be given either as a DateTime for a static start point, or as a Duration for an start point relative to the start of the current optimisation."
temporal\_block,tb,resolution, "Temporal resolution of the temporal\_block. Essentially, divides the period between block\_start and block\_end into TimeSlices with the input resolution."
temporal\_block,tb,weight,"Weighting factor of the temporal block associated with the objective function"
temporal\_block,tb,representative\_periods\_mapping,"Mapping from real timelices to their corresponding representative days"
unit,u,candidate\_units,"Number of units which may be additionally constructed"
unit,u,curtailment\_cost,"Costs for curtailing generation. Essentially, accrues costs whenever unit\_flow not operating at its maximum available capacity. E.g. EUR/MWh"
unit,u,fix\_units\_invested,"Fix the value of the units\_invested variable."
unit,u,fix\_units\_invested\_available,"Fix the value of the units\_invested\_available variable"
unit,u,fix\_units\_on,"Fix the value of the units\_on variable."
unit,u,fom\_cost,"Fixed operation and maintenance costs of a unit. Essentially, a cost coefficient on the number\_of\_units and unit\_capacity parameters. E.g. EUR/MWh"
unit,u,min\_down\_time,"Minimum downtime of a unit after it shuts down."
unit,u,min\_up\_time,"Minimum uptime of a unit after it starts up."
unit,u,number\_of\_units,"Denotes the number of 'sub units' aggregated to form the modelled unit."
unit,u,online\_variable\_type,"A selector for how the units\_on variable is represented within the model."
unit,u,shut\_down\_cost,"Costs of shutting down a 'sub unit', e.g. EUR/shutdown."
unit,u,start\_up\_cost,"Costs of starting up a 'sub unit', e.g. EUR/startup."
unit,u,unit\_availability\_factor,"Availability of the unit, acting as a multiplier on its unit\_capacity. Typically between 0-1."
unit,u,unit\_investment\_cost,"Investment cost per 'sub unit' built."
unit,u,unit\_investment\_lifetime,"Minimum lifetime for unit investment decisions."
unit,u,unit\_investment\_variable\_type,"Determines whether investment variable is integer or continuous."
unit\_constraint,uc,constraint\_sense,"A selector for the sense of the unit\_constraint."
unit\_constraint,uc,right\_hand\_side,"The right-hand side, constant term in a unit\_constraint. Can be time-dependent and used e.g. for complicated efficiency approximations."
connection\_\_from\_node, "(conn, n)", "connection\_capacity", "Limits the connection\_flow variable from the from\_node. from\_node can be a group of nodes, in which case the sum of the connection\_flow is constrained."
connection\_\_from\_node, "(conn, n)", "connection\_conv\_cap\_to\_flow", "Optional coefficient for connection\_capacity unit conversions in the case that the connection\_capacity value is incompatible with the desired connection\_flow units."
connection\_\_from\_node, "(conn, n)", "connection\_emergency\_capacity", "Post contingency flow capacity of a connection. Sometimes referred to as emergency rating"
connection\_\_from\_node, "(conn, n)", "fix\_connection\_flow", "Fix the value of the connection\_flow variable."
connection\_\_from\_node, "(conn, n)", "fix\_binary\_gas\_connection\_flow", "Fix the value of the connection\_flow\_binary variable, and hence pre-determine the direction of flow in the connection."
connection\_\_from\_node, "(conn, n)", "fix\_connection\_intact\_flow", "Fix the value of the connection\_intact\_flow variable."
connection\_\_from\_node\_\_unit\_constraint", "(conn, n, uc)", "connection\_flow\_coefficient", "defines the unit constraint coefficient on the connection flow variable in the from direction"
connection\_\_node\_\_node, "(conn, n_1, n_2)", "connection\_flow\_delay", "Delays the connection\_flows associated with the second node $n_2$ in respect to the connection\_flows associated with the first node $n_1$."
connection\_\_node\_\_node, "(conn, n_1, n_2)", "fix\_ratio\_out\_in\_connection\_flow", "Fix the ratio between the connection\_flow from the first node $n_1$ and the connection\_flow to the second node $n_2$."
connection\_\_node\_\_node, "(conn, n_1, n_2)", "max\_ratio\_out\_in\_connection\_flow", "Maximum ratio between the connection\_flow from the first node $n_1$ and the connection\_flow to the second node $n_2$."
connection\_\_node\_\_node, "(conn, n_1, n_2)", "min\_ratio\_out\_in\_connection\_flow", "Minimum ratio between the connection\_flow from the first node $n_1$ and the connection\_flow to the second node $n_2$."
connection\_\_node\_\_node, "(conn, n_1, n_2)", "fixed\_pressure\_constant\_1", "Fixed pressure points for pipelines for the outer approximation of the Weymouth approximation. The direction of flow is the first node $n_1$ in the relationship to the second node $n_2$ in the relationship."
connection\_\_node\_\_node, "(conn, n_1, n_2)", "fixed\_pressure\_constant\_0", "Fixed pressure points for pipelines for the outer approximation of the Weymouth approximation. The direction of flow is the first node $n_1$ in the relationship to the second node $n_2$ in the relationship."
connection\_\_node\_\_node, "(conn, n_1, n_2)", "compression\_factor", "The compression factor establishes a compression from an origin node to a receiving node, which are connected through a connection. The first node $n_1$ corresponds to the origin node, the second to the (compressed) destination node. Typically the value is $\geq 1$."
connection\_\_node\_\_node, "(conn, n_1, n_2)", "connection\_linepack\_constant", "The linepack constant is a property of gas pipelines and relates the linepack to the pressure of the adjacent nodes."
connection\_\_to\_node, "(conn, n)", "connection\_capacity", "Limits the connection\_flow variable to the to\_node. to\_node can be a group of nodes, in which case the sum of the connection\_flow is constrained."
connection\_\_to\_node, "(conn, n)", "connection\_conv\_cap\_to\_flow", "Optional coefficient for connection\_capacity unit conversions in the case the connection\_capacity value is incompatible with the desired connection\_flow units."
connection\_\_to\_node, "(conn, n)", "connection\_emergency\_capacity", "The maximum post-contingency flow on a monitored connection."
connection\_\_to\_node, "(conn, n)", "fix\_connection\_flow", "Fix the value of the connection\_flow variable."
connection\_\_to\_node, "(conn, n)", "fix\_connection\_intact\_flow", "Fix the value of the connection\_intact\_flow variable."
connection\_\_to\_node\_\_unit\_constraint, "(conn, n, uc)", "connection\_flow\_coefficient", "defines the unit constraint coefficient on the connection flow variable in the to direction"
node\_\_node, "(n_1, n_2)", "diff\_coeff", "Commodity diffusion coefficient between two nodes $n_1$ and $n_2$. Effectively, denotes the *diffusion power per unit of state* from the first node $n_1$ to the second."
node\_\_temporal\_block, "(n, tb)", "cyclic\_condition", "If the cyclic condition is set to true for a storage node, the node\_state at the end of the optimisation window has to be larger than or equal to the initial storage state."
node\_\_unit\_constraint, "(n, uc)", "demand\_coefficient", "coefficient of the specified node's demand in the specified unit constraint"
node\_\_unit\_constraint, "(n, uc)", "node\_state\_coefficient", "Coefficient of the specified node's state variable in the specified unit constraint."
unit\_\_commodity, "(u, c)", "max\_cum\_in\_unit\_flow\_bound", "Set a maximum cumulative upper bound for a unit\_flow"
unit\_\_from\_node, "(u, n)", "fix\_nonspin\_ramp\_up\_unit\_flow", "Fix the nonspin\_ramp\_up\_unit\_flow variable."
unit\_\_from\_node, "(u, n)", "fix\_nonspin\_units\_started\_up", "Fix the nonspin\_units\_started\_up variable."
unit\_\_from\_node, "(u, n)", "fix\_ramp\_up\_unit\_flow", "Fix the ramp\_up\_unit\_flow variable."
unit\_\_from\_node, "(u, n)", "fix\_start\_up\_unit\_flow", "Fix the start\_up\_unit\_flow variable."
unit\_\_from\_node, "(u, n)", "fix\_unit\_flow", "Fix the unit\_flow variable."
unit\_\_from\_node, "(u, n)", "fix\_unit\_flow\_op", "Fix the unit\_flow\_op variable."
unit\_\_from\_node, "(u, n)", "fuel\_cost", "Variable fuel costs than can be attributed to a unit\_flow."
unit\_\_from\_node, "(u, n)", "reserve\_procurement\_cost", "Procurement cost for reserves"
unit\_\_from\_node, "(u, n)", "max\_res\_shutdown\_ramp", "Max. downward reserve ramp for online units scheduled to shut down for reserve provision"
unit\_\_from\_node, "(u, n)", "max\_res\_startup\_ramp", "Maximum non-spinning reserve ramp-up for startups."
unit\_\_from\_node, "(u, n)", "max\_shutdown\_ramp", "Max. downward ramp for units shutting down"
unit\_\_from\_node, "(u, n)", "max\_startup\_ramp", "Maximum ramp-up during startups."
unit\_\_from\_node, "(u, n)", "min\_res\_shutdown\_ramp", "Minimum non-spinning reserve ramp-down for online units providing reserves during shut-downs"
unit\_\_from\_node, "(u, n)", "min\_res\_startup\_ramp", "Minimum non-spinning reserve ramp-up for startups."
unit\_\_from\_node, "(u, n)", "min\_shutdown\_ramp", "Minimum ramp-up during startups"
unit\_\_from\_node, "(u, n)", "min\_startup\_ramp", "Minimum ramp-up during startups."
unit\_\_from\_node, "(u, n)", "minimum\_operating\_point", "Minimum level for the unit\_flow relative to the units\_on online capacity."
unit\_\_from\_node, "(u, n)", "operating\_points", "Operating points for piecewise-linear unit efficiency approximations."
unit\_\_from\_node, "(u, n)", "ramp\_down\_cost", "Costs for ramping down"
unit\_\_from\_node, "(u, n)", "ramp\_down\_limit", "Limit the maximum ramp-down rate of an online unit, given as a fraction of the unit\_capacity."
unit\_\_from\_node, "(u, n)", "ramp\_up\_cost", "Costs for ramping up"
unit\_\_from\_node, "(u, n)", "ramp\_up\_limit", "Limit the maximum ramp-up rate of an online unit, given as a fraction of the unit\_capacity."
unit\_\_from\_node, "(u, n)", "unit\_capacity", "Maximum unit\_flow capacity of a single 'sub\_unit' of the unit."
unit\_\_from\_node, "(u, n)", "unit\_conv\_cap\_to\_flow", "Optional coefficient for unit\_capacity unit conversions in the case the unit\_capacity value is incompatible with the desired unit\_flow units."
unit\_\_from\_node, "(u, n)", "vom\_cost", "Variable operating costs of a unit\_flow variable. E.g. EUR/MWh."
unit\_\_from\_node\_\_unit\_constraint, "(u, n, uc)", "unit\_flow\_coefficient", "Coefficient of a unit\_flow variable for a custom unit\_constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_ratio\_in\_in\_unit\_flow", "Fix the ratio between two unit\_flows coming into the unit from the two nodes $n_1$ and $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_ratio\_in\_out\_unit\_flow", "Fix the ratio between an incoming unit\_flow from the first node $n_1$ and an outgoing unit\_flow to the second node $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_ratio\_out\_in\_unit\_flow", "Fix the ratio between an outgoing unit\_flow to the first node $n_1$ and an incoming unit\_flow from the second node $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_ratio\_out\_out\_unit\_flow", "Fix the ratio between two unit\_flows going from the unit into the two nodes $n_1$ and $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_units\_on\_coefficient\_in\_in", "Optional coefficient for the units\_on variable impacting the fix\_ratio\_in\_in\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_units\_on\_coefficient\_in\_out", "Optional coefficient for the units\_on variable impacting the fix\_ratio\_in\_out\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_units\_on\_coefficient\_out\_in", "Optional coefficient for the units\_on variable impacting the fix\_ratio\_out\_in\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "fix\_units\_on\_coefficient\_out\_out", "Optional coefficient for the units\_on variable impacting the fix\_ratio\_out\_out\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_ratio\_in\_in\_unit\_flow", "Maximum ratio between two unit\_flows coming into the unit from the two nodes $n_1$ and $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_ratio\_in\_out\_unit\_flow", "Maximum ratio between an incoming unit\_flow from the first node $n_1$ and an outgoing unit\_flow to the second node $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_ratio\_out\_in\_unit\_flow", "Maximum ratio between an outgoing unit\_flow to the first node $n_1$ and an incoming unit\_flow from the second node $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_ratio\_out\_out\_unit\_flow", "Maximum ratio between two unit\_flows going from the unit into the two nodes $n_1$ and $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_units\_on\_coefficient\_in\_in", "Optional coefficient for the units\_on variable impacting the max\_ratio\_in\_in\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_units\_on\_coefficient\_in\_out", "Optional coefficient for the units\_on variable impacting the max\_ratio\_in\_out\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_units\_on\_coefficient\_out\_in", "Optional coefficient for the units\_on variable impacting the max\_ratio\_out\_in\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "max\_units\_on\_coefficient\_out\_out", "Optional coefficient for the units\_on variable impacting the max\_ratio\_out\_out\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_ratio\_in\_in\_unit\_flow", "Minimum ratio between two unit\_flows coming into the unit from the two nodes $n_1$ and $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_ratio\_in\_out\_unit\_flow", "Minimum ratio between an incoming unit\_flow from the first node $n_1$ and an outgoing unit\_flow to the second node $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_ratio\_out\_in\_unit\_flow", "Minimum ratio between an outgoing unit\_flow to the first node $n_1$ and an incoming unit\_flow from the second node $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_ratio\_out\_out\_unit\_flow", "Minimum ratio between two unit\_flows going from the unit into the two nodes $n_1$ and $n_2$."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_units\_on\_coefficient\_in\_in", "Optional coefficient for the units\_on variable impacting the min\_ratio\_in\_in\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_units\_on\_coefficient\_in\_out", "Optional coefficient for the units\_on variable impacting the min\_ratio\_in\_out\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_units\_on\_coefficient\_out\_in", "Optional coefficient for the units\_on variable impacting the min\_ratio\_out\_in\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "min\_units\_on\_coefficient\_out\_out", "Optional coefficient for the units\_on variable impacting the min\_ratio\_out\_out\_unit\_flow constraint."
unit\_\_node\_\_node, "(u, n_1, n_2)", "unit\_incremental\_heat\_rate", "Standard piecewise incremental heat rate where node1 is assumed to be the fuel and node2 is assumed to be electricity. Assumed monotonically increasing. Array type or single coefficient where the number of coefficients must match the dimensions of unit\_operating\_points"
unit\_\_node\_\_node, "(u, n_1, n_2)", "unit\_idle\_heat\_rate", "Flow from node1 per unit time and per units\_on that results in no additional flow to node2"
unit\_\_node\_\_node, "(u, n_1, n_2)", "unit\_start\_flow", "Flow from node1 that is incurred when a unit is started up."
unit\_\_to\_node, "(u, n)", "fix\_nonspin\_ramp\_down\_unit\_flow", "Fix the nonspin\_ramp\_down\_unit\_flow variable."
unit\_\_to\_node, "(u, n)", "fix\_nonspin\_ramp\_up\_unit\_flow", "Fix the nonspin\_ramp\_up\_unit\_flow variable."
unit\_\_to\_node, "(u, n)", "fix\_nonspin\_units\_shut\_down", "Fix the nonspin\_units\_shut\_down variable."
unit\_\_to\_node, "(u, n)", "fix\_nonspin\_units\_started\_up", "Fix the nonspin\_units\_started\_up variable."
unit\_\_to\_node, "(u, n)", "fix\_ramp\_down\_unit\_flow", "Fix the ramp\_down\_unit\_flow variable."
unit\_\_to\_node, "(u, n)", "fix\_ramp\_up\_unit\_flow", "Fix the ramp\_up\_unit\_flow variable."
unit\_\_to\_node, "(u, n)", "fix\_shut\_down\_unit\_flow", "Fix the shut\_down\_unit\_flow variable."
unit\_\_to\_node, "(u, n)", "fix\_start\_up\_unit\_flow", "Fix the start\_up\_unit\_flow variable."
unit\_\_to\_node, "(u, n)", "fix\_unit\_flow", "Fix the unit\_flow variable."
unit\_\_to\_node, "(u, n)", "fix\_unit\_flow\_op", "Fix the unit\_flow\_op variable."
unit\_\_to\_node, "(u, n)", "fuel\_cost", "Variable fuel costs than can be attributed to a unit\_flow. E.g. EUR/MWh"
unit\_\_to\_node, "(u, n)", "reserve\_procurement\_cost", "Procurement cost for reserves"
unit\_\_to\_node, "(u, n)", "max\_res\_shutdown\_ramp", "Maximum non-spinning reserve ramp-down for online units providing reserves during shut-downs"
unit\_\_to\_node, "(u, n)", "max\_res\_startup\_ramp", "Maximum non-spinning reserve ramp-up for offline units scheduled for reserve provision"
unit\_\_to\_node, "(u, n)", "max\_shutdown\_ramp", "Maximum ramp-down during shutdowns"
unit\_\_to\_node, "(u, n)", "max\_startup\_ramp", "Maximum ramp-up during startups"
unit\_\_to\_node, "(u, n)", "min\_res\_shutdown\_ramp", "Minimum non-spinning reserve ramp-down for online units providing reserves during shut-downs"
unit\_\_to\_node, "(u, n)", "min\_res\_startup\_ramp", "Minimum non-spinning reserve ramp-up for offline units scheduled for reserve provision"
unit\_\_to\_node, "(u, n)", "min\_shutdown\_ramp", "Minimum ramp-up during startups"
unit\_\_to\_node, "(u, n)", "min\_startup\_ramp", "Minimum ramp-up during startups"
unit\_\_to\_node, "(u, n)", "minimum\_operating\_point", "Minimum level for the unit\_flow relative to the units\_on online capacity."
unit\_\_to\_node, "(u, n)", "operating\_points", "Decomposes the flow variable into a number of separate operating segment variables. Used to in conjunction with unit\_incremental\_heat\_rate and/or unit\_constraints"
unit\_\_to\_node, "(u, n)", "ramp\_down\_cost", "Costs of ramping down"
unit\_\_to\_node, "(u, n)", "ramp\_down\_limit", "Limit the maximum ramp-down rate of an online unit, given as a fraction of the unit\_capacity."
unit\_\_to\_node, "(u, n)", "ramp\_up\_cost", "Costs of ramping up"
unit\_\_to\_node, "(u, n)", "ramp\_up\_limit", "Limit the maximum ramp-up rate of an online unit, given as a fraction of the unit\_capacity."
unit\_\_to\_node, "(u, n)", "unit\_capacity", "Maximum unit\_flow capacity of a single 'sub\_unit' of the unit."
unit\_\_to\_node, "(u, n)", "unit\_conv\_cap\_to\_flow", "Optional coefficient for unit\_capacity unit conversions in the case the unit\_capacity value is incompatible with the desired unit\_flow units."
unit\_\_to\_node, "(u, n)", "vom\_cost", "Variable operating costs of a unit\_flow variable. E.g. EUR/MWh."
unit\_\_to\_node\_\_unit\_constraint, "(u, n, uc)", "unit\_flow\_coefficient", "Coefficient of a unit\_flow variable for a custom unit\_constraint."
unit\_\_unit\_constraint, "(u, uc)", "units\_on\_coefficient", "Coefficient of a units\_on variable for a custom unit\_constraint."
unit\_\_unit\_constraint, "(u, uc)", "units\_started\_up\_coefficient", "Coefficient of a units\_started\_up variable for a custom unit\_constraint."
